# Workflow for making a preview deployment of the blog
name: Deploy blog preview

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

# Default to bash
defaults:
  run:
    shell: bash

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=sha
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: "18.18.0"
      - name: Set up Docker
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Install dependencies
        run: npm clean-install
      - name: Build site
        run: npm run build
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: renku-blog-ci-${{ github.event.number }}
      url: https://renku-blog-ci-${{ github.event.number }}.dev.renku.ch
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=sha
      - name: Set up Helm
        uses: azure/setup-helm@v4
      - name: Deploy helm chart
        env:
          RENKU_RELEASE: renku-blog-ci-${{ github.event.number }}
          KUBECONFIG: "${{ github.workspace }}/renkubot-kube.config"
          RENKUBOT_KUBECONFIG: ${{ secrets.RENKUBOT_DEV_KUBECONFIG }}
          IMAGE_TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          RENKU_NAMESPACE=${RENKU_RELEASE}
          IMAGE=$(echo "$IMAGE_TAGS" | cut -d" " -f1)
          IMAGE_REPOSITORY=$(echo "$IMAGE" | cut -d":" -f1)
          IMAGE_TAG=$(echo "$IMAGE" | cut -d":" -f2)
          echo "$RENKUBOT_KUBECONFIG" > "$KUBECONFIG" && chmod 400 "$KUBECONFIG"
          kubectl create namespace ${RENKU_NAMESPACE} || true
          helm upgrade --install ${RENKU_RELEASE} ./helm-chart/renku-blog \
            --namespace=${RENKU_NAMESPACE} --timeout 5m --wait --wait-for-jobs \
            --set image.repository=${IMAGE_REPOSITORY} --set image.tag=${IMAGE_TAG}
